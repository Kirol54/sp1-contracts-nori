// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import {Test} from "forge-std/Test.sol";
import {SP1Verifier} from "../src/v5.0.0/SP1VerifierPlonk.sol";

contract SP1VerifierPlonkTest is Test {
    bytes32 internal constant PROGRAM_VKEY =
        bytes32(
            0xd4e8ecd2357dd882209800acd6abb443d231cf287d77ba62b732ce937c8b56e7
        );
    // bytes internal constant PUBLIC_VALUES =
    //     hex"00000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000001a6d0000000000000000000000000000000000000000000000000000000000002ac2";
    bytes internal constant PUBLIC_VALUES =
        hex"00265fa666dda7006a8e9cf5bcdea768ad04c422536b257fba068cb76c3109b50ab640746caf714bc118bf3f9e138d5aec818220bce301985fa6a08e645d8994";

    // bytes internal constant PROOF_VALID =
    //     hex"54bdcae32122ba5d63ecb7d08cf7e217531928202417f27aa006e67ab53721eb386323bd1548e7a98de06f907d6067c9069866a6e8ca4a81a8553566abee9c2903efec8d0d3a52e9e717313d6fb5076bf3865cd8705a40b2613563b1d10f13adbeced54b179c997b00339169940341b4bb6ea21cd43992779b03e9a17fe6925f6273774e1b37fe45304344f3c66efee0b283cc6f8bb5d50e1f711d869080191284b5b93d10eafd8c57fab7d77ff15918e5e7fd93ed7ae6edc8629464aee148934e719c761e932ac3e956d05c70f9f2d2145c0b72f5e96127311b0b5ff805683091ec1f391beaffe65cf81e0613902331c700fcb0659c0c57e2f5d48d7e4eec04309060221f29322fc530473f367d34f38b47747afd4397acf8f75219ed6d393a468822b5152de3687df40b6ffebe49fbf0ceda8b54042283e454586875bb602b26a1175e165bdd7b6f29206896396e864904bb3cf5d375c84f311e5c557918dedccf27c30f43b11922ac6c9c0901634269de7d8ec9543ff834167149db30cd87b5c00c8d28cabf65079b6be84e5d013f514775e16d078215751f30547561ded0d2af784c0cbefb1fbd6149c09ed6eb0844265b1b0d038acd6b389cba9b3d6335e31567c706acf8cb896be0b70ce13eeb65990e69e29a48b85de56e2cda40d154034633f321f266a6af27e1adebe64e89a451bbeabb5fc0d9cf22c66c76710f599f39434b12f8ce865dda948710bed1755df69588eb5b0c21fb0f929b1bff7b7358c4cb1c271a65be960be28f2af49f3be51ddd6a4e552a3c1bb57204cd020d1057ae15602a43eb67628c5697ef5b181ded7e76a1f26997bca92ba31ef7337b63326a31cb1a13ec5b1d81605d83dbbf17f9699ebe3f2a2afa211dd09cf5de084d29ab28c212d9017f24ce6697e36d8c84b82970e1dedf5c74a821b73fce661c2a0bf1408f2c557c0e8962ad59cca1931cb276d3566e6f4a9411102cbf486c83aced09563d22a891e9abd3b6cee11963269c1f32f6131e97852584736ca8dbf7c6f9e34f660f79c2b9cd21515608ccc90af5e5689df83f623c08bc49284d93d4cfbf4ca60c2e2d8c1cb71195ac41b0788267d5af7092b421963519a1bb2e23774e7648344b19334175fa8031c8562bfb5209242b0a35282cbc7d05f96f4bf24318b6c37f0727f359fd9cf136abc923abbffc906a32cfb0e6d16ce61cc2d20748c2460f6844";
    // bytes internal constant PROOF_VALID =
    //     hex"1b34fe112dac3ba24f360a6deda246f6d3e9d8080ed09f97126ef9af18c5de05ca340416054a4430da47cc1a780b8c91f2c4a3347b1523d220bee21f7b10016e0df7e708235ff58eb8e9feb8cf75355f3daec83dd4dde0ebe08ca90ea98510aba1585f4f0d1716e7f3a01ac0ac6f3a1f6130256444c0b25a114f9300abaeb0d0838d29b22c1dbdf8e4d0f950e7d062751c52a03ad451685e0d23b45563aa87a7d74ec1cf2cff1161e6d5c9272c3892a76adeb9a5aada5d7065c8e41121ebf4bd9d0fb2cc1aed4c55f27c9cb2021ddae086085388d250dc257cc61ece968e674b25ed18a32e9fbdee2b76ceb2c26d73c760252070fab8d5c04dd4f5616ca352666bb187820bb1920bd0959e61569ec796bd832e78f92e20320fc9cc9ae6ae8470dab6437109fdd853d0db78b9ce5811df7c7bf6a7c0486cf433219034e1c43206b64a404a19280febb426e548e99e6279adceffaa4ddae622ec50624afb4ea827467adc41099d164e7abfdc97d9b168461c2626e88239d30529974cb1b582d7362ed6d6d52a2af70b568d007ce53077a078437c2acf6cad206354b0ffa823b4de87918a0503a674ce289759e10b9da150b523d55886b63dc8526f0e36132edb5239c0c23819d465a94658e64d3798897c8438352029a3d285a049af99ff195c36359c16d0086e2bbb1679e24af18ee4aac62fded55640735e7c6aeda82abe2c01a3f307c90dad3ef6870691a71276c4f6f185fb14cfe8c7a418c26b3620ce09eff0d21a421657a289347c1973783849c4545c7ed8f0ea65f1eb40b31678d627e70b79bfd11592517f8902c7364f90126fe04c28381fe12e165adcf82217876359a544e2182c1660be901029bf87b9796eedddc65aef146a4419ae4a123ee18aacfa9c41d124577aded4d6983f59f123e52821f39141c397fcc957b4f7a2a4ede57b55ef1005e37b2c4f98ccba063aef65967db4e19547a1e18bea96ab8ec861b7a3e085db2a5ab0dadfc301d004d4863346963baebbd7ea536022a8b90cd9b52d865d5c9c1e6437eaa886f121c46132f1bcd890827f7860cc63e5b27d8319f9b0cab8d27e28ecd97e273c00ce59504ccc15bfe8a2d8f87d1bbd7dc63df606b3c975080a6f27086e886de4f31d65e997d9dd08e35dd6590101d9185db7c8c5dd7dd9348c9c1b711862d9757e744014177960751f5f5a84f14bbc1b019021db0666b8e55fc3";
    bytes internal constant PROOF_VALID =
        hex"d4e8ecd224d5c319764d788edb9f695cfcdd2df2510b0576a4bdbd79953c7f74359f0559021971912d12779f292513e2492c6d6952ee08c7646f000d2f2db051b70906081a5da859d516b01de2ea458a96d65a1cfb2072cd620a0687a5087fedaa8dcc4e23610e8a21f2f01208cca389b87bcc8281ae83f99de0a142af2537fa2e9dc7c201b299f59939ec5f2e34d221f07000c63c4fb1dd7c1514eb37a7ee8fff2a0e7f0b90f2a7fcccc16bb39f257b29734fdd67379819a70490d6dd9141321128c591047d749ab2c1271768691bc36003fa5fba054c01f22f1d1199f6498f4eaabde0166ac12b01f1843886bf3615619ae2dc32cb5605c6c6bdc8f9f56682034447031168993b6d29ce8a0518c616cef6b74bb06c08c49f4673e7e23d054d1038ff6801f2e26f59c1f15942f0dd2135d051f4846923c76c6fd7f8a4d1bdb30ce7c9b21f9a6f6a6e113512556a6927bb132ee81b9974bce81c2e453ce283e69a3fa51c17e2ededee39b57f6771a2344ad6fed54536b1c9db0ab2cd27d931feaf3d15cb160aec52026d8752906a7df6b9a62752a7e1a7adce6f63891127d7b6ef70f42028ca7e06ad1ce50da719a321e9f705c707756f04530a8ab826874170a836b628155e4f5ce938f45c2b224f5f0dbc04c5ab06f30677fff56e581cfc7432f82258139f972305ea39186d23ec0cdef2d801bac894a6b4467ab0e362213adc666f7d04430bbda57a5d36450edee4d67cf7a77f881fdbd26c565969a8bda5e2eb43c601a17a8546e13d4e6b4fa36fb0d669cb3dbc1698ba183dc55bc94ebe24379913242c895aa8146b694238eca9f90c57813f272d110a7e0d60474f2f4c7ec653a60da6c57462c77613f361d73332905b4990c9ba00aea99f0b843247a3246447b310337dbb59d57fb9695e0e78b245050d4cdcc2d05ecdd02105443f247f9625d303123e653a2d1f5dd70721ee0e34e8f4a9022b8290d1d6bbc7365c28411b9c2214222179391fc1c2fdf180416a9de2fd67859d924fb8dd6d9cde068cf1232c4e1bfceb817d186c90a9b36bf34c0782e9957b9a9dbf59ed44df06396f6155f718101c4ec07858d26a81fad52ff12503f6bda12874a01841c976e8058d9afdf3270439540991a4b516400042751fe0dfb63818c7e8614efeaae6a6a1c605f647120aef7d28f290a7a7bddb6ffc3c07ca304bc0a7893036062d12c8c37502cf4b34";
    bytes internal constant PROOF_INVALID =
        hex"616a42052115dd50acf8e57f10c32ca72a6940";

    address internal verifier;

    function setUp() public virtual {
        verifier = address(new SP1Verifier());
    }

    /// @notice Should succeed when the proof is valid.
    function test_VerifyProof_WhenPlonk() public view {
        SP1Verifier(verifier).verifyProof(
            PROGRAM_VKEY,
            PUBLIC_VALUES,
            PROOF_VALID
        );
    }

    /// @notice Should revert when the proof is invalid.
    function test_RevertVerifyProof_WhenPlonk() public view {
        SP1Verifier(verifier).verifyProof(
            PROGRAM_VKEY,
            PUBLIC_VALUES,
            PROOF_VALID
        );
    }
}
